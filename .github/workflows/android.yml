# 芝麻开花节节高
name: Android CI

on:
  push:
    branches: [ main, master, dev ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build Sesame APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
        
    - name: Grant Execute Permission
      run: chmod +x gradlew
      
    - name: Display Gradle Version
      run: ./gradlew --version
      
    - name: Get Build Number
      id: build_number
      run: |
        BUILD_NUMBER=$(git rev-list --count HEAD)
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        echo "Build number: $BUILD_NUMBER"
    
    - name: Build Release APK
      run: |
        echo "========== 开始编译 Release APK =========="
        ./gradlew assembleRelease --no-configuration-cache --stacktrace
        
        echo ""
        echo "========== 编译完成 =========="
        echo "检查输出目录..."
        ls -lh app/build/outputs/apk/release/ || echo "❌ Release 目录不存在"
        
        echo ""
        echo "查找所有 APK 文件..."
        find app/build -name "*.apk" -type f -ls 2>/dev/null || echo "❌ 未找到 APK 文件"
      
    - name: Rename Release APK
      id: sign_apk
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle.kts | sed 's/.*"\(.*\)".*/\1/')
        BUILD_NUM=${{ steps.build_number.outputs.BUILD_NUMBER }}
        TARGET_NAME="Sesame-v${VERSION_NAME}.rc${BUILD_NUM}-signed.apk"
        
        echo "========== 重命名 APK =========="
        echo "Version: $VERSION_NAME"
        echo "Build Number: $BUILD_NUM"
        echo "Target Name: $TARGET_NAME"
        echo ""
        
        cd app/build/outputs/apk/release
        
        # 查找并重命名 APK
        APK_FILE=$(ls *.apk 2>/dev/null | head -n 1)
        if [ -n "$APK_FILE" ]; then
          echo "找到 APK: $APK_FILE"
          mv "$APK_FILE" "$TARGET_NAME"
          echo "✅ 重命名成功: $TARGET_NAME"
          ls -lh "$TARGET_NAME"
        else
          echo "❌ 未找到 APK 文件"
          ls -la
          exit 1
        fi
        
        echo ""
        echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "APK_NAME=$TARGET_NAME" >> $GITHUB_OUTPUT
        echo "APK_PATH=$(pwd)/$TARGET_NAME" >> $GITHUB_OUTPUT
        
    - name: Upload Release Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Sesame-Release
        path: app/build/outputs/apk/release/Sesame-*.apk
        retention-days: 90
        compression-level: 9
        if-no-files-found: error
    
    - name: Configure Git Identity
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Create Tag and Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        VERSION_TAG="v${{ steps.sign_apk.outputs.VERSION_NAME }}"
        BUILD_TAG="${VERSION_TAG}.rc${{ steps.build_number.outputs.BUILD_NUMBER }}"
        
        echo "========== 创建 Tag 和 Release =========="
        echo "Version Tag: $VERSION_TAG"
        echo "Build Tag: $BUILD_TAG"
        
        # 检查tag是否存在，如果存在则删除
        if git ls-remote --tags origin | grep -q "refs/tags/$BUILD_TAG$"; then
          echo "Tag $BUILD_TAG 已存在，删除旧标签..."
          git push origin --delete "$BUILD_TAG" || true
        fi
        
        # 创建并推送新tag
        git tag "$BUILD_TAG" -m "Release $BUILD_TAG - 芝麻开花节节高"
        git push origin "$BUILD_TAG"
        
        echo "TAG_NAME=$BUILD_TAG" >> $GITHUB_ENV
        
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: 芝麻球 ${{ steps.sign_apk.outputs.VERSION_NAME }} RC${{ steps.build_number.outputs.BUILD_NUMBER }}
        files: app/build/outputs/apk/release/Sesame-*.apk
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## 🌱 芝麻球 ${{ steps.sign_apk.outputs.VERSION_NAME }}
          
          **芝麻开花节节高！**
          
          ### 📦 下载
          
          **文件名**: `${{ steps.sign_apk.outputs.APK_NAME }}`
          
          **编译版本**: RC${{ steps.build_number.outputs.BUILD_NUMBER }}
          
          ### 📝 更新内容
          
          ${{ github.event.head_commit.message }}
          
          ### 📱 使用说明
          
          1. 下载并安装 APK
          2. 在 LSPosed/LSPatch 中激活模块
          3. 选择作用域：`com.eg.android.AlipayGphone` (支付宝)
          4. 重启支付宝应用
          5. 打开芝麻球应用进行配置
          
          ### ⚙️ 功能特性
          
          - ✅ 桌面启动图标
          - ✅ UI 配置界面
          - ✅ 森林和庄园配置
          - ✅ 日志查看功能
          - ✅ JSON 配置存储
          - ✅ 支持 LSPosed 和 LSPatch
          
          ---
          
          *芝麻开花节节高 - 蚂蚁森林和蚂蚁庄园自动化模块*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
